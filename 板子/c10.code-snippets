{
	"Trie Class with Node Struct": {
		"scope": "cpp",
		"prefix": "trie",
		"body": [
			"struct node {",
			"\tvector<node*> son;",
			"\tvector<ll> cnt;",
			"\tnode() {",
			"\t\tson.resize(2);",
			"\t\tcnt.resize(2);",
			"\t\tson[0] = son[1] = nullptr;",
			"\t\tcnt[0] = cnt[1] = 0;",
			"\t}",
			"};",
			"class Trie {",
			"public:",
			"\tnode* root;",
			"\tint tot;",
			"\tTrie() {",
			"\t\troot = new node();",
			"\t\ttot = 0;",
			"\t}",
			"\tvoid insert(ll x) {",
			"\t\ttot += 1;",
			"\t\tnode* cur = root;",
			"\t\tfor(int i = 33; i >= 0; i -= 1) {",
			"\t\t\tint bit = (x >> i) & 1;",
			"\t\t\tif(cur -> son[bit] == nullptr) {",
			"\t\t\t\tcur -> son[bit] = new node();",
			"\t\t\t}",
			"\t\t\tcur -> cnt[bit] += 1;",
			"\t\t\tcur = cur -> son[bit];",
			"\t\t}",
			"\t}",
			"\tvoid erase(ll x) {",
			"\t\ttot -= 1;",
			"\t\tnode* cur = root;",
			"\t\tfor(int i = 33; i >= 0; i -= 1) {",
			"\t\t\tint bit = (x >> i) & 1;",
			"\t\t\tcur -> cnt[bit] -= 1;",
			"\t\t\tcur = cur -> son[bit];",
			"\t\t}",
			"\t}",
			"\tll query(ll x) {",
			"\t\tif(tot == 0) return 0;",
			"\t\tnode* cur = root;",
			"\t\tll res = 0;",
			"\t\tfor(int i = 33; i >= 0; i -= 1) {",
			"\t\t\tint bit = (x >> i) & 1;",
			"\t\t\t// 找 0",
			"\t\t\tif(bit) {",
			"\t\t\t\tif(cur -> son[0] == nullptr || cur -> cnt[0] == 0) {",
			"\t\t\t\t\tres = res * 2;",
			"\t\t\t\t\tcur = cur -> son[1];",
			"\t\t\t\t} else {",
			"\t\t\t\t\tres = res * 2 + 1;",
			"\t\t\t\t\tcur = cur -> son[0];",
			"\t\t\t\t}",
			"\t\t\t} else {",
			"\t\t\t\tif(cur -> son[1] == nullptr || cur -> cnt[1] == 0) {",
			"\t\t\t\t\tres = res * 2;",
			"\t\t\t\t\tcur = cur -> son[0];",
			"\t\t\t\t} else {",
			"\t\t\t\t\tres = res * 2 + 1;",
			"\t\t\t\t\tcur = cur -> son[1];",
			"\t\t\t\t}",
			"\t\t\t}",
			"\t\t}",
			"\t\treturn res;",
			"\t}",
			"};"
		],
		"description": "快速生成Trie类包含node结构体"
	}
}
