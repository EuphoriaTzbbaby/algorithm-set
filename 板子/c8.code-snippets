{
	"Slpf Class": {
		"scope": "cpp",
		"prefix": "slpf",
		"body": [
			"class Slpf {",
			"public:",
			"\tint n, tot;",
			"\tvector<ll> dfn;",
			"\tvector<ll> a;",
			"\tvector<ll> nums;",
			"\tvector<vector<ll>> g;",
			"\tvector<ll> sz;",
			"\tvector<ll> dep;",
			"\tvector<ll> top;",
			"\tvector<ll> pa;",
			"\tvector<ll> son;",
			"",
			"\tSlpf(int n, vector<ll> &a, vector<vector<ll>> &g) {",
			"\t\ttot = 0;",
			"\t\tthis -> n = n;",
			"\t\tthis -> a = a;",
			"\t\tthis -> g = g;",
			"\t\tsz.resize(n + 1);",
			"\t\tdep.resize(n + 1);",
			"\t\ttop.resize(n + 1);",
			"\t\tpa.resize(n + 1);",
			"\t\tson.resize(n + 1);",
			"\t\tdfn.resize(n + 1);",
			"\t\tnums.resize(n + 1);",
			"\t}",
			"",
			"\tvoid dfs1(ll u, ll fa) {",
			"\t\tdep[u] = dep[fa] + 1;",
			"\t\tpa[u] = fa;",
			"\t\tsz[u] = 1;",
			"\t\tll x = 0;",
			"\t\tfor (auto v : g[u]) {",
			"\t\t\tif (v != fa) {",
			"\t\t\t\tdfs1(v, u);",
			"\t\t\t\tsz[u] += sz[v];",
			"\t\t\t\tif (x < sz[v]) {",
			"\t\t\t\t\tson[u] = v;",
			"\t\t\t\t\tx = sz[v];",
			"\t\t\t\t}",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"",
			"\tvoid dfs2(ll u, ll t) {",
			"\t\tdfn[u] = ++tot;",
			"\t\tnums[tot] = a[u];",
			"\t\ttop[u] = t;",
			"\t\tif (son[u] == 0) return;",
			"\t\tdfs2(son[u], t);",
			"\t\tfor (auto v : g[u]) {",
			"\t\t\tif (v != son[u] && v != pa[u]) {",
			"\t\t\t\tdfs2(v, v);",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"};"
		],
		"description": "快速生成Slpf类"
	}
}
