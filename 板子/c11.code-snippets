{
	"Zfc Class": {
		"scope": "cpp",
		"prefix": "zfc",
		"body": [
			"class Zfc {",
			"public:",
			"\tint n;",
			"\tstring s;",
			"\tvector<int> next;",
			"\tvector<int> z;",
			"",
			"\tZfc(string s) {",
			"\t\tthis -> s = s;",
			"\t\tn = s.size();",
			"\t}",
			"",
			"\tvoid initNext() {",
			"\t\tnext.resize(n);",
			"\t\tll i = 2, j = 0;",
			"\t\twhile (i < n) {",
			"\t\t\tif (s[i - 1] == s[j]) {",
			"\t\t\t\tj += 1;",
			"\t\t\t\tnext[i] = j;",
			"\t\t\t\ti += 1;",
			"\t\t\t} else if (j == 0) {",
			"\t\t\t\tnext[i] = 0;",
			"\t\t\t\ti += 1;",
			"\t\t\t} else {",
			"\t\t\t\tj = next[j];",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"",
			"\tvoid initZ() {",
			"\t\tz.resize(n);",
			"\t\tll left = 0, right = 0;",
			"\t\tfor (ll i = 1; i < n; i += 1) {",
			"\t\t\tif (i <= right) {",
			"\t\t\t\tz[i] = lmin(z[i - left], right - i + 1);",
			"\t\t\t}",
			"\t\t\twhile (i + z[i] < n && s[z[i]] == s[i + z[i]]) {",
			"\t\t\t\tleft = i;",
			"\t\t\t\tright = i + z[i];",
			"\t\t\t\tz[i] += 1;",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"};"
		],
		"description": "快速生成Zfc类包含next和z数组的初始化"
	}
}
