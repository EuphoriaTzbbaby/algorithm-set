class TreeAncestor:
    def __init__(self, n: int, parent: List[int]):
        m = n.bit_length()
        pa = [[p] + [-1] * (m - 1) for p in parent]
        for i in range(m - 1):
            for x in range(n):
                pp = pa[x][i]
                if pp != -1:
                    pa[x][i + 1] = pa[pp][i]
        self.pa = pa
    def getKthAncestor(self, node: int, k: int) -> int:
        for i in range(k.bit_length()):
            if (k >> i) & 1:
                node = self.pa[node][i]
            if node < 0:
                return -1
        return node
