# 傻鸟模拟
class Solution:
    def resultGrid(self, img: List[List[int]], threshold: int) -> List[List[int]]:
        m, n = len(img), len(img[0])
        s = [[0] * (n + 9) for _ in range(m + 9)]
        cnt = [[0] * (n + 9) for _ in range(m + 9)]
        for i in range(2, m):
            for j in range(2, n):
                ok = True
                ss = 0
                for x in range(i - 2, i + 1):
                    for y in range(j - 2, j + 1):
                        ss += img[x][y]
                        for dx, dy in [[0, 1], [0, -1], [1, 0], [-1, 0]]:
                            nx, ny = x + dx, y + dy 
                            if 0 <= nx < m and 0 <= ny < n and i - 2 <= nx <= i and j - 2 <= ny <= j and abs(img[x][y] - img[nx][ny]) > threshold:
                                ok = False
                                break
                if ok:
                    ss //= 9
                    x1, y1 = i - 2 + 1, j - 2 + 1
                    x2, y2 = i + 1, j + 1
                    s[x1][y1] += ss 
                    s[x1][y2 + 1] -= ss
                    s[x2 + 1][y1] -= ss 
                    s[x2 + 1][y2 + 1] += ss
                    cnt[x1][y1] += 1
                    cnt[x1][y2 + 1] -= 1
                    cnt[x2 + 1][y1] -= 1
                    cnt[x2 + 1][y2 + 1] += 1
        ans = [[0] * n for _ in range(m)]
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                s[i][j] += s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1]
                cnt[i][j] += cnt[i][j - 1] + cnt[i - 1][j] - cnt[i - 1][j - 1]
                if cnt[i][j]:
                    ans[i - 1][j - 1] = s[i][j] // cnt[i][j]
                else:
                    ans[i - 1][j - 1] = img[i - 1][j - 1]
        return ans
                
                
