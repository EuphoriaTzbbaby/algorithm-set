# 又学了一招，字符串哈希
class Solution:
    def minimumTimeToInitialState(self, s: str, k: int) -> int:
        ans = 0
        n = len(s)
        bkdrHash = [0] * (n + 1)
        mod = 1111111111111111111
        for i in range(n):
            bkdrHash[i + 1] = (bkdrHash[i] * 131 + ord(s[i]) - 97 + 1) % mod 
        g = [1] * n
        for i in range(1, n):
            g[i] = g[i - 1] * 131 % mod 
        for i in range(k - 1, n, k):
            if (bkdrHash[n] - bkdrHash[i + 1] * g[n - 1 - i] % mod + mod) % mod == bkdrHash[n - i - 1]:
                return ans + 1
            else:
                ans += 1
        return ans + 1
