# 分类讨论好题
class Solution:
    def maximumLength(self, s: str) -> int:
        # 要记录的串和其出现次数
        g = defaultdict(list)
        cnt = defaultdict(int)
        n = len(s)
        i, j = 0, 1
        while j < n:
            while j < n and s[j] == s[i]:
                j += 1
            cnt[s[i : j]] += 1
            i = j
        for key, val in cnt.items():
            g[key[0]].append((len(key), val))
        ans = -1
        for res in g.values():
            res.sort(reverse = True)
            # 只有一个串
            if res[0][1] >= 3:
                ans = max(ans, res[0][0])
            elif res[0][1] == 2:
                if res[0][0] >= 2:
                    ans = max(ans, res[0][0] - 1)
            elif res[0][1] == 1:
                if res[0][0] >= 3:
                    ans = max(ans, res[0][0] - 2)
            if len(res) >= 2:
                ans = max(ans, res[1][0])
        return ans
