from sortedcontainers import SortedList
class Solution:
    def minAbsoluteDifference(self, nums: List[int], x: int) -> int:
        """
        abs(i - j) >= x 且 abs(nums[i] - nums[j])最小
        if nums[i] >= nums[j], 最小化 nums[i] - nums[j] 找小于 nums[i] 的最大 nums[j]
        否则 最小化 nums[j] - nums[i] 找大于 nums[i] 的最小nums[j]
        维护一个有序数组st 
        怎么维护 st
        i - j >= x  j <= i - x
        i - j <= - x
        j >= i + x
        若 i >= j 有 j <= i - x 
           0 [0, 0 - x]
           1 [0, 1 - x]
           i 增大，i - x 增大
        若 i <= j 有 j >= i + x
           0 [x, n - 1]
           1 [x + 1, n - 1]
           i 增大, j 增大
        """
        ans = inf
        n = len(nums)
        st = SortedList()
        # 当 i <= j 时
        for i in range(x, n):
            st.add(nums[i])
        for i in range(n):
            # 1 3 5 7
            id = st.bisect_left(nums[i])
            if id != len(st) and st:
                ans = min(ans, st[id] - nums[i])
            # 1 3 5 7
            id = st.bisect_left(nums[i] + 1) - 1
            if st and st[id] <= nums[i]:
                ans = min(ans, nums[i] - st[id])
            if i + x < n:
                st.remove(nums[i + x])
            if n > i - x + 1 >= 0:
                st.add(nums[i - x + 1])
        return ans
        
        
            
        
