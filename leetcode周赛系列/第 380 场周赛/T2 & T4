"""
思路很清晰的，关键是 kmp 匹配
"""
class Solution:
    def beautifulIndices(self, s: str, a: str, b: str, k: int) -> List[int]:
        def kmp(s: str, t: str):
            m = len(t)
            next = [0] * m
            j = 0
            for i in range(1, m):
                v = t[i]
                while j and t[j] != v:
                    j = next[j - 1]
                if t[j] == v:
                    j += 1
                next[i] = j
            res = []
            j = 0
            for i, v in enumerate(s):
                v = s[i]
                while j and t[j] != v:
                    j = next[j - 1]
                if t[j] == v:
                    j += 1
                if j == len(t):
                    res.append(i - m + 1)
                    j = next[j - 1]
            return res
        n = len(s)
        na, nb = len(a), len(b)
        if n < na or n < nb:
            return []
        id1 = kmp(s, a)
        id2 = kmp(s, b)
        # 枚举 id1 中的 i
        # if j - i > 0 有 j <= i + k
        # else j - i <= 0 有 i - j <= k j >= i - k
        ans = []
        for id, i in enumerate(id1):
            x1 = bisect_left(id2, i - k)
            x2 = bisect_left(id2, i + k + 1) - 1
            if x1 <= x2:
                ans.append(i)
        return ans
