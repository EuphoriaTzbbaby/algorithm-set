gg =  [[] for _ in range(1 << 12)]
for i in range(1 << 12):
    sub = i
    while sub:
        gg[i].append(sub)
        sub = (sub - 1) & i
class Solution:
    def minimumTimeRequired(self, cookies: List[int], k: int) -> int:
        n = len(cookies)
        g = defaultdict(int)
        for mask in range(1, 1 << n):
            s = 0
            for i in range(n):
                if (mask >> i) & 1:
                    s += cookies[i]
                g[mask] = s 
        f =[[inf] * (k + 1) for _ in range(1 << n)]
        f[0][0] = 0
        for mask in range(1, 1 << n):
            for kk in range(1, k + 1):
                for sub in gg[mask]:
                    x = f[mask ^ sub]
                    if x < g[sub]:
                        x = g[sub]
                    if f[mask] > x:
                        f[mask] = x
        return f[(1 << n) - 1]
