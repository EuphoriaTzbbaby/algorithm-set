******************************************************************************leetcode************************************************************************************

70.爬楼梯(比较直接)
class Solution:
    def climbStairs(self, n: int) -> int:
        @cache
        def dfs(i: int):
            if i <= 2:
                return i 
            return dfs(i - 1) + dfs(i - 2)
        return dfs(n)

509.斐波那契数(比较直接)
class Solution:
    def fib(self, n: int) -> int:
        @cache 
        def dfs(i: int):
            if i == 2:
                return 1
            if i == 1:
                return 1
            if i == 0:
                return 0
            return dfs(i - 1) + dfs(i - 2)
        return dfs(n)

1137.第 N 个泰波那契数(比较直接)
class Solution:
    def tribonacci(self, n: int) -> int:
        @cache 
        def dfs(i: int):
            if i == 3:
                return 2
            if i == 2 or i == 1:
                return 1
            if i == 0:
                return 0
            return dfs(i - 1) + dfs(i - 2) + dfs(i - 3)
        return dfs(n)
